# Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn.metrics import accuracy_score, mean_squared_error
import matplotlib.pyplot as plt

# Load dataset
url = "/content/drive/MyDrive/soil.csv"
df = pd.read_csv(url)

# Display the first few rows of the dataset
print(df.head())

# Define features (X) and target variable (y)
X = df[['pH', 'Clay %', 'EC mS/cm', 'P ppm', 'B ppm']]
y = df['contaminated']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Linear Regression
lr_model = LinearRegression()
lr_model.fit(X_train_scaled, y_train)
lr_predictions = lr_model.predict(X_test_scaled)

# Support Vector Regression
svr_model = SVR()
svr_model.fit(X_train_scaled, y_train)
svr_predictions = svr_model.predict(X_test_scaled)

# Evaluate models
lr_accuracy = accuracy_score(y_test, [1 if pred >= 0.5 else 0 for pred in lr_predictions])
svr_accuracy = accuracy_score(y_test, [1 if pred >= 0.5 else 0 for pred in svr_predictions])

# Print accuracies
print(f"Linear Regression Accuracy: {lr_accuracy * 100:.2f}%")
print(f"SVR Accuracy: {svr_accuracy * 100:.2f}%")

# Plot predictions
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
plt.scatter(y_test, lr_predictions)
plt.title('Linear Regression Predictions')
plt.xlabel('True Values')
plt.ylabel('Predictions')

plt.subplot(1, 2, 2)
plt.scatter(y_test, svr_predictions)
plt.title('SVR Predictions')
plt.xlabel('True Values')
plt.ylabel('Predictions')

plt.show()
